name: Deploy in dev

on:
  workflow_call:
    inputs:
      environment:
        description: Environment to be deployed
        required: true
        type: string

jobs:
  deploy-dev:
    name: Dev module
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      NODE_VERSION: 16.14.0
      GO_VERSION: 1.18
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read region and service name from sst.json
        run: |
          metadata=`python3 -c "
          import json
          
          with open('sst.json', 'r') as f:
            sst_data = json.load(f)
          print(sst_data['name'],sst_data['region'])"`
          name=$(echo "$metadata" | cut -d ' ' -f1)
          region=$(echo "$metadata" | cut -d ' ' -f2)
          echo "SERVICE_NAME=$name" >> $GITHUB_ENV
          echo "AWS_REGION=$region" >> $GITHUB_ENV

      - name: Create workflow information file
        run: |
          import configparser
          from datetime import datetime
          import json, os

          read_version = configparser.ConfigParser()
          read_version.read("VERSION.ini")
          version = read_version.get('APP', 'version')

          commit_sha = os.getenv("GITHUB_SHA")
          short_hash = commit_sha[:7]
          run_id = os.getenv("GITHUB_RUN_ID")
          dev_version = f"{version}-{short_hash}-{run_id}"

          pipeline_details ={
            "name" : os.getenv("SERVICE_NAME"),
            "date" : datetime.now().strftime("%Y-%m-%dT%H:%M:%SZ"),
            "version" : dev_version,
            "runId" :run_id,                
            "branch" : os.getenv("GITHUB_REF_NAME")
          }
            
          json_object = json.dumps(pipeline_details, indent = 4)
          workspace_path = os.getenv("GITHUB_WORKSPACE")
            
          with open(f"{workspace_path}/backend/mainmodule/workflow_info.json", "w") as outfile:
              outfile.write(json_object)

        shell: python

      - name: Setup Nodejs ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: make install

      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: GithubCDActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy stack
        run: make deploy stage="dev"

      - name: Add action summary
        env:
          REPO: ${{ github.event.repository.name }}
          REPO_URL: ${{ github.event.repository.html_url }}
        run: |
          branchUrl=${REPO_URL}/tree/${GITHUB_REF_NAME}
          echo "## Sources" >> $GITHUB_STEP_SUMMARY
          echo "|Repository|Branch|" >> $GITHUB_STEP_SUMMARY
          echo "|---|---|" >> $GITHUB_STEP_SUMMARY
          echo "|<a href='${REPO_URL}'>${REPO}</a>|"\
                "<a href='${branchUrl}'>${GITHUB_REF_NAME}</a>|" >> $GITHUB_STEP_SUMMARY
