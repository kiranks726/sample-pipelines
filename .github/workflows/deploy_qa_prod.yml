name: Deploy in QA or Prod

on:
  workflow_call:
    inputs:
      environment:
        description: Environment to be deployed
        required: true
    
jobs:
  deploy:
    name: ${{ inputs.environment }} module
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: write
    env:
      NODE_VERSION: 16.14.0
      GO_VERSION: 1.17
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create workflow information file
        run: |
          import configparser
          from datetime import datetime
          import json, os
          
          read_version = configparser.ConfigParser()
          read_version.read("VERSION.ini")
          version = read_version.get('APP', 'version')

          pipeline_details ={
            "name" : os.getenv("GITHUB_WORKFLOW"),
            "date" : datetime.now().strftime("%Y-%m-%dT%H:%M:%SZ"),
            "version" : version,
            "runId" : os.getenv("GITHUB_RUN_ID"),                
            "branch" : os.getenv("GITHUB_REF_NAME")
          }
            
          json_object = json.dumps(pipeline_details, indent = 4)
          workspace_path = os.getenv("GITHUB_WORKSPACE")
            
          with open(f"{workspace_path}/backend/mainmodule/workflow_info.json", "w") as outfile:
              outfile.write(json_object)

        shell: python

      - name: Setup Nodejs ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # - name: Setup Go ${{ env.GO_VERSION }}
      #   uses: actions/setup-go@v3
      #   with:
      #     go-version: ${{ env.GO_VERSION }}

      # - name: Install dependencies
      #   run: make install

      # - name: Read region from sst.json
      #   id: get_aws_region
      #   run: |
      #     region=`python3 -c "
      #     import json
          
      #     with open('sst.json', 'r') as f:
      #       sst_data = json.load(f)
      #     print(sst_data['region'])"`
      #     echo "::set-output name=aws_region::$region"

      # - name: Configure aws
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
      #     role-session-name: GithubCDActions
      #     aws-region: ${{ steps.get_aws_region.outputs.aws_region }}

      # - name: Deploy stack
      #   run: make deploy stage="${{ github.event.inputs.environment }}"

      # - name: Add action summary
      #   env:
      #     REPO: ${{ github.event.repository.name }}
      #     REPO_URL: ${{ github.event.repository.html_url }}
      #   run: |
      #     branchUrl=${REPO_URL}/tree/${GITHUB_REF_NAME}
      #     echo "## Sources" >> $GITHUB_STEP_SUMMARY
      #     echo "|Repository|Branch|" >> $GITHUB_STEP_SUMMARY 
      #     echo "|---|---|" >> $GITHUB_STEP_SUMMARY 
      #     echo "|<a href='${REPO_URL}'>${REPO}</a>|"\
      #           "<a href='${branchUrl}'>${GITHUB_REF_NAME}</a>|" >> $GITHUB_STEP_SUMMARY
